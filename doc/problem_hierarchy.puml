@startuml sine

!include ./style.iuml

class Item {
    int length
}

class TwoDimensionalItem {
    int width
}

class Compartment {
    {field} int depth (capacity)
    is_item_compatible(item: Item)
    demand_for_item(item)
}

class TwoDimensionalCompartment {
    int length
}

class Vehicle {
    List[Comparment] compartments
}


class BaseProblem {
    List[Item] items
    Vehicle vehicle
    List[List[int]] distance_matrix
    evaluate_solution(solution, optimization_objective)
}

class Problem {

}


class TwoDimensionalProblem {
}


' classAlias "multiplicityRole1" o--> "multiplicityRole2" typeAlias : label <<stereotype>> >
' Comparment -- Item

' Vehicle *-- Compartment

'Extensions
Compartment <|-- TwoDimensionalCompartment
Item <|-- TwoDimensionalItem
BaseProblem <|-- TwoDimensionalProblem
BaseProblem <|-- Problem


' BaseProblem o-- Vehicle
' BaseProblem o-- Item
' TwoDimensionalProblem o-- TwoDimensionalItem

' DatabaseBatchSequencer - BatcherRobot: robots
' BatcherRobot -- BatcherRobotBattery: battery

' DatabaseBatchSequencer ..> SecondaryTasksManager: idle_robot(robot, world_state)
' DatabaseBatchSequencer ..> OperationTimeChargingManager: update_robots_shifts(robots)

' OperationTimeChargingManager ....> RosterManager: operation_time_left()
' OperationTimeChargingManager ....> RosterManager: enabled

' SecondaryTasksManager ....> ChargingManager: charge_robot(robot)

@enduml
