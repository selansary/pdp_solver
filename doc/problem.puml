@startuml problem

!include ./style.iuml

skinparam linetype ortho

class Problem {
    List[Item] items
    Vehicle vehicle
    List[List[int]] distance_matrix
    int evaluate_solution(Solution solution,
                            \t OptimizationObjective optimization_objective)
}

class TwoDimensionalProblem {
    int evaluate_solution(Solution solution,
                            \t OptimizationObjective optimization_objective)
}

class ModelledBaseProblem {
    gurobipy.Model model
    Dict[str, gurobipy.tupledict] model_data
    create_model()
    apply_constraints()
    set_model_objective(OptimizationObjective
                        \t \t \t \t OptimizationObjective)
    solve(float time_limit)
    Solution extract_solution()
}

class ModelledTwoDimensionalProblem {
    create_model()
    apply_constraints()
    set_model_objective(OptimizationObjective
                        \t \t \t \t OptimizationObjective)
}

enum OptimizationObjective {
    CHEAPEST_ROUTE
    LEAST_ROTATION
    CHEAPEST_ROUTE_LEAST_ROTATION
}

' left to right direction

'Extensions
Problem <|-- ModelledBaseProblem
ModelledBaseProblem <|-- ModelledOneDimensionalProblem

Problem <|-- TwoDimensionalProblem
ModelledBaseProblem <|-- ModelledTwoDimensionalProblem
TwoDimensionalProblem <|-- ModelledTwoDimensionalProblem

'Aggregations
' Item --o Problem::items
' Vehicle --o Problem::vehicle

' 'Associations
' Solution -- Problem::evaluate_solution
' OptimizationObjective -- Problem::evaluate_solution

' first trial
' Solution --left Problem
' OptimizationObjective -left Problem
' Item -o Problem
' Vehicle -o Problem

Solution -left Problem
OptimizationObjective - Problem
Item --o Problem
Vehicle --o Problem

'Hidden links for visualization

hide empty members
@enduml
